2024-01-06  Georgios Athanasiou  <yorgath@gmail.com>

	* scm/yamlpp.scm
	(yaml-set-indent!): Wrap the corresponding primitive.
	(yaml-string-manipulators): New variable that holds the
	manipulators only relevant to strings.
	(yaml-bool-manipulators): New variable that holds the manipulators
	only relevant to booleans.
	(yaml-int-manipulators): New variable that holds the manipulators
	only relevant to integers.
	(yaml-seq-manipulators): New variable that holds the manipulators
	only relevant to sequences.
	(yaml-map-manipulators): New variable that holds the manipulators
	only relevant to mappings.
	(yaml-manipulators): Construct from partial manipulator lists.
	(filter-manipulators): Optionally filter against a subset of all
	the valid manipulators.
	(yaml-set-style!): Use the renamed primitive.
	(yaml-set-string-format!): Use the renamed primitive.  Filter
	manipulators narrowly.
	(yaml-set-bool-format!): Use the renamed primitive.  Filter
	manipulators narrowly.
	(yaml-set-seq-format!): Use the renamed primitive.  Filter
	manipulators narrowly.
	(yaml-set-map-format!): Use the renamed primitive.  Filter
	manipulators narrowly.

2024-01-05  Georgios Athanasiou  <yorgath@gmail.com>

	* scm/yamlpp.scm
	(make-yaml-emitter): Wrap the corresponding primitive.
	(yaml-emitter-good?): Wrap the corresponding primitive.
	(yaml-emitter-string): Wrap the corresponding primitive.
	(yaml-emit-null!): Wrap the corresponding primitive.
	(yaml-emit-string!): Wrap the corresponding primitive.
	(yaml-emit-boolean!): Wrap the corresponding primitive.
	(yaml-emit-integer!): Wrap the corresponding primitive.
	(yaml-emit-comment!): Wrap the corresponding primitive.
	(yaml-emit-newline!): Wrap the corresponding primitive.
	(yaml-begin-doc!): Wrap the corresponding primitive.
	(yaml-end-doc!): Wrap the corresponding primitive.
	(yaml-begin-seq!): Wrap the corresponding primitive.
	(yaml-end-seq!): Wrap the corresponding primitive.
	(yaml-begin-map!): Wrap the corresponding primitive.
	(yaml-end-map!): Wrap the corresponding primitive.
	(yaml-emit-key!): Wrap the corresponding primitive.
	(yaml-emit-value!): Wrap the corresponding primitive.
	(yaml-emit-anchor!): Wrap the corresponding primitive.
	(yaml-emit-alias!): Wrap the corresponding primitive.
	(yaml-set-int-base!): Wrap the corresponding primitive.

2024-01-04  Georgios Athanasiou  <yorgath@gmail.com>

	* cxx/macros.h: Remove file no longer necessary.

	* cxx/emitter.cxx
	(begin_doc): Make it static.
	(begin_map): Make it static.
	(begin_seq): Make it static.
	(emit_alias): Make it static.
	(emit_boolean): Make it static.
	(emit_comment): Make it static.
	(emit_integer): Make it static.
	(emit_key): Make it static.
	(emit_newline): Make it static.
	(emit_null): Make it static.
	(emit_string): Make it static.
	(emit_value): Make it static.
	(emitter_good): Make it static.
	(emitter_string): Make it static.
	(end_doc): Make it static.
	(end_map): Make it static.
	(end_seq): Make it static.
	(init_emitter): Move initialization here.
	(init_emitter_type): Make it static.
	(make_emitter): Make it static.
	(set_bool_format): Make it static.
	(set_indent): Make it static.
	(set_int_base): Make it static.
	(set_map_format): Make it static.
	(set_seq_format): Make it static.
	(set_string_format): Make it static.
	(set_style): Make it static.

	* cxx/reader.cxx
	(init_node_type): Make it static.
	(init_reader): Move initialization here.
	(load_node): Make it static.
	(load_node_from_file): Make it static.
	(load_nodes): Make it static.
	(load_nodes_from_file): Make it static.
	(scalar_value): Make it static.
	(yaml_node_to_alist): Make it static.
	(yaml_node_to_list): Make it static.
	(yaml_node_type): Make it static.

	* cxx/init.cxx (init): Move initialization code to reader.cxx and
	emitter.cxx.


2024-01-03  Georgios Athanasiou  <yorgath@gmail.com>

	First public release
